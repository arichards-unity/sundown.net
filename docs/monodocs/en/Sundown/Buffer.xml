<Type Name="Buffer" FullName="Sundown.Buffer">
  <TypeSignature Language="C#" Value="public abstract class Buffer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Buffer extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>SundownNet</AssemblyName>
    <AssemblyVersion>1.15.12.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abstracts the NativeBuffer and the ClrBuffer.
</summary>
    <remarks>
<list type="bullet">
  <item><term>This class should be subclassed only with caution, it allows to change the behaviour of buffer allocations, this functionality should be used only by people who know exactly what they are doing.</term></item>
  <item><term>In order to achieve faster performance, the buffer should be allocated immediately with a decent size, so the renderer won't have to grow the buffer.</term></item>
</list>

 </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Buffer (IntPtr size, bool alloc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int size, bool alloc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.IntPtr" />
        <Parameter Name="alloc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="size">Allocates a buffer of the size saved in the variable if the second argument alloc is true.
If alloc is false, it will just use the value inside size as a pointer to the allocated buffer. </param>
        <param name="alloc">Determines how to treat the first argument IntPtr size of the constructor. If alloc is true, it will allocate a new buffer with the size saved in the 'IntPtr size' argument, if false, it will use the value in size as a pointer to the buffer.</param>
        <summary>Allocates a new buffer or reuses an existing one.</summary>
        <remarks>This class is a wrapper of the buf functionality provided sundown (a collection of methods dealing with a buffer struct). The class is unsafe, in the sense that it uses pointer aritmethic and c functions.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alloc">
      <MemberSignature Language="C#" Value="protected abstract void Alloc (IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Alloc(native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">The size of the allocated buffer.</param>
        <summary>Allocates the NativeHandle.</summary>
        <remarks>bufnewcb should be called from the sundown library in order to use custom allocators.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocatedSize">
      <MemberSignature Language="C#" Value="public IntPtr AllocatedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int AllocatedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The allocated size of the buffer.</summary>
        <value>The size of the allocated buffer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Sundown.Buffer Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Sundown.Buffer Create() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.Buffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a buffer using the default buffer implementation.</summary>
        <returns>A new instance of the default buffer implementation.</returns>
        <remarks>Creates a buffer with the size of DefaultUnitSize(1024), which can lead to suboptimal behaviour, if the input is know to be bigger.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Sundown.Buffer Create (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Sundown.Buffer Create(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">The initial size of the buffer.</param>
        <summary>Creates a buffer using the default buffer implementation.</summary>
        <returns>A new instance of the default buffer implementation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Sundown.Buffer Create (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Sundown.Buffer Create(int64 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">The initial size of the buffer.</param>
        <summary>Creates a buffer using the default buffer implementation.</summary>
        <returns>A new instance of the default buffer implementation.</returns>
        <remarks>Using values greater than 32bit on 32bit machines will result in errorneous program behaviour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Sundown.Buffer Create (IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Sundown.Buffer Create(native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">The initial size of the buffer.</param>
        <summary>Creates a buffer using the default buffer implementation.</summary>
        <returns>A new instance of the default buffer implementation.</returns>
        <remarks>Using values greater than 32bit on 32bit machines will result in errorneous program behaviour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public IntPtr Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Buffer allocation pointer.</summary>
        <value>A pointer to the allocated buffer.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultUnitSize">
      <MemberSignature Language="C#" Value="public static readonly int DefaultUnitSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 DefaultUnitSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default unit size.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the allocated buffer.</summary>
        <remarks>Using this on NativeBuffer will release the allocated memory immediately, while on ClrBuffer it will just release the pinhandle and wait for the byte array to be collected by the GC.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">true if the user called Dispose, false if the garbage collector initiated the dispose method.</param>
        <summary>The Dispose(bool) pattern.</summary>
        <remarks>Override this in your sublcasses if you want to have specific release behaviour.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Default encoding to use for when serializing between strings and the buffer.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Buffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static Sundown.Buffer From (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Sundown.Buffer From(native int ptr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.Buffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">Pointer pointing to the buf handle.</param>
        <summary>Creates an instance of the default buffer implementation from a pointer pointing to a buf handle.</summary>
        <returns>A new instance of the default buffer implementation.</returns>
        <remarks>Don't cross over ClrBuffer buf handles and NativeBuffer handles, because the allocated memory is allocated by GCHandle/byte[] and malloc accordingly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBufferStream">
      <MemberSignature Language="C#" Value="public Sundown.BufferStream GetBufferStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Sundown.BufferStream GetBufferStream() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Sundown.BufferStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wraps the current Buffer in a BufferStream.</summary>
        <returns>A BufferStream which wraps the current Buffer.</returns>
        <remarks>The BufferStream let's you only write.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copies the content of the buffer into a newly allocated clr array.</summary>
        <returns>A CLR byte array containing all the information of the buffer.</returns>
        <remarks>The size is equal to the content size and not the buffer size. The entire content of the buffer gets copied and not just reused.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an UnmanagedStream.</summary>
        <returns>An UnmanagedStream pointing to the allocated buffer memory.</returns>
        <remarks>If you call this method and then call Grow on the buffer, the pointer to which the UnamangedStream is pointing might become invalid.
Always drop the last Stream you got with this function if you are doing operations on the buffer which might increase the buffer(resize/realloc the memory).</remarks>
      </Docs>
    </Member>
    <Member MemberName="Grow">
      <MemberSignature Language="C#" Value="public void Grow (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Grow(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">The amount of bytes which to grow.</param>
        <summary>Grow the buffer size.</summary>
        <remarks>Growing passed 16MB will result in OutOfMemoryException. This is a sundown limitation.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Grow">
      <MemberSignature Language="C#" Value="public void Grow (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Grow(int64 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">The amount of bytes which to grow.</param>
        <summary>Grow the buffer size.</summary>
        <remarks>Growing passed 16MB will result in OutOfMemoryException. This is a sundown limitation.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Grow">
      <MemberSignature Language="C#" Value="public void Grow (IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Grow(native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">The amount of bytes which to grow.</param>
        <summary>Grow the buffer size.</summary>
        <remarks>Growing passed 16MB will result in OutOfMemoryException. This is a sundown limitation.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeHandle">
      <MemberSignature Language="C#" Value="public IntPtr NativeHandle { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int NativeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The native buffer handle which is used by the sundown library.</summary>
        <value>Pointer to the native buffer handle.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (Sundown.Buffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(class Sundown.Buffer buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Sundown.Buffer" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, int64 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (IntPtr data, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(native int data, int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (IntPtr data, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(native int data, int64 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (IntPtr data, IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(native int data, native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (string str, object[] param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(string str, object[] param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="param" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="param">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (System.Text.Encoding encoding, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(class System.Text.Encoding encoding, string str) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encoding">To be added.</param>
        <param name="str">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, long offset, long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, int64 offset, int64 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (byte[] bytes, IntPtr offset, IntPtr count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(unsigned int8[] bytes, native int offset, native int count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.IntPtr" />
        <Parameter Name="count" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public void Put (System.Text.Encoding encoding, string str, object[] param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Put(class System.Text.Encoding encoding, string str, object[] param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="param" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="encoding">To be added.</param>
        <param name="str">To be added.</param>
        <param name="param">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the buffer.</summary>
        <remarks>Doesn't release the memory, it only sets the seek pointer to 0.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public IntPtr Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The currently used size of the buffer.</summary>
        <value>To be added.</value>
        <remarks>This returns how much content the buffer contains.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slurp">
      <MemberSignature Language="C#" Value="public void Slurp (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Slurp(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">Number of bytes to remove.</param>
        <summary>Removes a given number of bytes from the head of the buffer.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slurp">
      <MemberSignature Language="C#" Value="public void Slurp (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Slurp(int64 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size">Number of bytes to remove.</param>
        <summary>Removes a given number of bytes from the head of the buffer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slurp">
      <MemberSignature Language="C#" Value="public void Slurp (IntPtr size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Slurp(native int size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="size">Number of bytes to remove.</param>
        <summary>Removes a given number of bytes from the head of the buffer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnitSize">
      <MemberSignature Language="C#" Value="public IntPtr UnitSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int UnitSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.15.12.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The unit size of the particular buffer.</summary>
        <value>To be added.</value>
        <remarks>The bigger the default unit size is the more memory is allocated when growing the buffer when the size is not sufficient to hold the entire content, but less allocations are needed.
The best way is to allocate immediately a sufficiently big enough buffer.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
